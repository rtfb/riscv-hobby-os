// This file is generated by scripts/gen-syscalls.py from include/syscalls.hh.
// To add a new system call, edit syscalls.hh. gen-syscalls.py will be rerun on
// the next build and this file will be modified. Commit in the changed file for
// easier readability.
#include "syscalls.h"
extern regsize_t exit(int status);
extern regsize_t fork();
extern regsize_t read(uint32_t fd, char* buf, uint32_t size);
extern regsize_t write(uint32_t fd, void* data, uint32_t size);
extern regsize_t open(char const *filepath, uint32_t flags);
extern regsize_t close(uint32_t fd);
extern regsize_t wait(wait_cond_t *cond);
extern regsize_t execv(char const* filename, char const* argv[]);
extern regsize_t getpid();
extern regsize_t dup(uint32_t fd);
extern regsize_t pipe(uint32_t fd[2]);
extern regsize_t sysinfo(sysinfo_t* info);
extern regsize_t sleep(uint64_t milliseconds);
extern regsize_t plist(uint32_t *pids, uint32_t size);
extern regsize_t pinfo(uint32_t pid, pinfo_t *pinfo);
extern regsize_t pgalloc();
extern regsize_t pgfree(void *page);
extern regsize_t gpio(uint32_t pin_num, uint32_t enable, uint32_t value);
extern regsize_t detach();
extern regsize_t isopen(int32_t fd);
extern regsize_t pipeattch(uint32_t pid, int32_t src_fd);
extern regsize_t lsdir(char const *dir, dirent_t *dirents, int size);
